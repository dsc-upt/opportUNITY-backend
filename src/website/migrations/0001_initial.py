# Generated by Django 3.1.6 on 2021-02-06 19:32

import common.utils
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("administration", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_published", models.BooleanField(db_index=True)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default=None,
                        upload_to=common.utils.get_upload_path,
                        verbose_name="image",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=2000, verbose_name="description"),
                ),
            ],
            options={
                "db_table": "articles",
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                ("email", models.EmailField(max_length=200, verbose_name="email")),
                ("subject", models.CharField(max_length=300, verbose_name="subject")),
                ("message", models.TextField(max_length=2000, verbose_name="message")),
            ],
            options={
                "db_table": "contacts",
            },
        ),
        migrations.CreateModel(
            name="Faq",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_published", models.BooleanField(db_index=True)),
                ("question", models.CharField(max_length=300, verbose_name="question")),
                ("answer", models.TextField(max_length=1000, verbose_name="answer")),
            ],
            options={
                "db_table": "faqs",
            },
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                ("link", models.CharField(max_length=1000, verbose_name="link")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                "ExternalLink",
                                "Link outside our domain (ex: google.com/milk)",
                            ),
                            ("InternalLink", "Link inside our domain (ex: /contact)"),
                        ],
                        default="InternalLink",
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                (
                    "order_index",
                    models.PositiveIntegerField(
                        db_index=True, default=0, verbose_name="order"
                    ),
                ),
            ],
            options={
                "db_table": "menu_items",
                "ordering": ["order_index"],
            },
        ),
        migrations.CreateModel(
            name="Newsletter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=250, unique=True, verbose_name="email"
                    ),
                ),
                (
                    "other",
                    models.CharField(
                        blank=True,
                        help_text="Other categories that are not listed above",
                        max_length=500,
                        verbose_name="other",
                    ),
                ),
            ],
            options={
                "db_table": "newsletters",
            },
        ),
        migrations.CreateModel(
            name="Partner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_published", models.BooleanField(db_index=True)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "website",
                    models.URLField(blank=True, default=None, verbose_name="website"),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        default=None,
                        upload_to=common.utils.get_upload_path,
                        verbose_name="logo",
                    ),
                ),
            ],
            options={
                "db_table": "partners",
            },
        ),
        migrations.CreateModel(
            name="Setting",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("TEXT", "Text"), ("IMAGE", "Image")],
                        default="TEXT",
                        max_length=5,
                        verbose_name="type",
                    ),
                ),
                (
                    "value",
                    models.TextField(default="", max_length=300, verbose_name="value"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default=None,
                        upload_to=common.utils.get_upload_path,
                        verbose_name="image",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        max_length=250,
                        verbose_name="description",
                    ),
                ),
            ],
            options={
                "db_table": "settings",
            },
        ),
        migrations.CreateModel(
            name="WantToHelp",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=225, verbose_name="name")),
                ("email", models.EmailField(max_length=255, verbose_name="email")),
                ("description", models.TextField(verbose_name="description")),
            ],
            options={
                "verbose_name": "want to help",
                "verbose_name_plural": "want to help",
                "db_table": "want_to_help",
            },
        ),
        migrations.AddConstraint(
            model_name="setting",
            constraint=models.CheckConstraint(
                check=models.Q(type__in=["TEXT", "IMAGE"]), name="setting_type_valid"
            ),
        ),
        migrations.AddField(
            model_name="newsletter",
            name="categories",
            field=models.ManyToManyField(
                blank=True,
                related_name="newsletters",
                related_query_name="newsletter",
                to="administration.Category",
                verbose_name="categories",
            ),
        ),
        migrations.AddField(
            model_name="menuitem",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="children",
                to="website.menuitem",
                verbose_name="parent",
            ),
        ),
        migrations.AddConstraint(
            model_name="menuitem",
            constraint=models.CheckConstraint(
                check=models.Q(type__in=["ExternalLink", "InternalLink"]),
                name="menuitem_type_valid",
            ),
        ),
    ]
